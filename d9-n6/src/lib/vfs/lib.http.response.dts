declare namespace O23 {
	interface Blob {
		readonly type: string;
		readonly size: number;
		slice(start?: number, end?: number): Blob;
		text(): Promise<string>;
	}

	// TODO need dts for NodeJS.ReadableStream
	type NodeJSReadableStream = any;

	interface Body {
		arrayBuffer(): Promise<ArrayBuffer>;
		blob(): Promise<Blob>;
		body: NodeJSReadableStream;
		bodyUsed: boolean;
		buffer(): Promise<Buffer>;
		json(): Promise<any>;
		size: number;
		text(): Promise<string>;
		textConverted(): Promise<string>;
		timeout: number;
	}

	type ResponseType =
		'basic'
		| 'cors'
		| 'default'
		| 'error'
		| 'opaque'
		| 'opaqueredirect';

	interface Response extends Body {
		// static error(): Response;
		// static redirect(url: string, status: number): Response;
		// clone(): Response;
		headers: Headers;
		ok: boolean;
		redirected: boolean;
		status: number;
		statusText: string;
		type: ResponseType;
		url: string;
	}
}
